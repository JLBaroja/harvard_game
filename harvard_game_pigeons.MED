\ The Harvard Game (pigeon version)
\ JosÃ© Luis Baroja
\ March 2017

\inputs
^melioration_key=
^maximization_key=
^central_key=

\outputs
^feeder=
^melioration_light=
^maximization_light=
^central_light=
^chamber_light=
^white_noise=

\variables
\T: session time (sec/100)
\W: hgame temporal window (number of trials that determine state)
\X: counter of responses in maXimization (min at 0, max at W)
\P: probability of reinforcement in each trial

\ Program start; main time counter
S.S.1, 
S1,
#START: on^white_noise;
	on^chamber_light;
	Z1 ---> S2 \ To first trial

S2,
0.01": add T;
	if T>=3000 [@T,@F]
	@T: ---> STOPABORTFLUSH
	@F: ---> SX


\ Trial start
S.S.2,
S1,
#Z1: ---> S2

S2,
5": off^chamber_light ---> S3

S3,
2": on^central_light ---> S4

S4,
#R^central_key: off^central_light;
		on^melioration_light;
		on^maximization_light;		
		Z2 ---> SX \ Wait for peck in any lateral key


\ Wait for peck in MELIORATION
S.S.3,
S1,
#Z2: ---> S2

S2,
#R^melioration_key: Z5; \ Turn keys off
		if X>0 [@T,@F]
			@T: set X = X-1 ---> S3
			@F: ---> S3

S3, 
0.01": set P=((1/3)*(X/W))*10000;
	WITHPI=P[@T,@F]
		@T: Z3 ---> SX \ To feeder
		@F: Z4 ---> SX \ To next trial


\ Wait for peck in MAXIMIZATION
S.S.4,
S1,
#Z2: ---> S2

S2,
#R^maximization_key: Z5; \ Turn keys off
		if X=W[@T,@F]
			@T: ---> S3
			@F: add X ---> S3

S3, 
0.01": set P=((1/3)+(1/3)*(X/W))*10000;
	WITHPI=P[@T,@F]
		@T: Z3 ---> SX \ Feeder
		@F: Z4 ---> SX \ Next trial


\ Feeder
S.S.5,
S1,
#Z3: on^feeder ---> S2

S2,
3": off^feeder;
	Z4 ---> SX \ To next trial 


\ Turn keys off
S.S.6,
S1,
#Z5: off^melioration_light; off^maximization_light ---> SX


\ Next trial 
S.S.7,
S1,
#Z4 ---> S2

S2,
2": on^chamber_light; 
	Z1 ---> SX \ Start next trial



